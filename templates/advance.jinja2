{% extends "base.jinja2" %}

{% block title %}Search+{% endblock %}

{% block content %}
    <div>
        <div class="fixed-nav">
            <h3>
                Jump to:
            </h3>

            <a href="#people_section">People</a>
            <a href="#dates_section">Dates</a>
            <a href="#places_section">Places</a>
            <a href="#letters_section">Content</a>
            <a href="#institutions_section">Repositories and Editions</a>
        </div> 
        
        <div class="row">
            <div class="large-2 columns"><!-- dummy column -->&nbsp;</div>

            <div class="large-10 columns" style="padding-left:25px">
                    <div id="about">
                        <br/>
                        <h2 class="main">Search+</h2>
                    </div>

                    <div id="people_section" class="large-12 columns" style="padding-left:25px">
                        {% include './components/advance/people.jinja2' %}
                    </div>

                    <div id="dates_section" class="large-12 columns" style="padding-left:25px">
                        {% include './components/advance/dates.jinja2' %}
                    </div>
                    <div id="places_section" class="large-12 columns" style="padding-left:25px">
                        {% include './components/advance/places.jinja2' %}
                    </div>

                    <div id="letters_section" class="large-12 columns" style="padding-left:25px">
                        {% include './components/advance/letters.jinja2' %}
                    </div>

                    <div id="institutions_section" class="large-12" style="padding-left:25px">
                        {% include './components/advance/institutions.jinja2' %}
                    </div>
            </div>
        </div>
    </div>
{% endblock %}


{% block extra_js_bottom %}
{% include "_edges_common_js.jinja2" %}
<script type="module" src="../static/js/repository_dropdown.edges.js"></script>
<script>
function advanceSearch(event){
  
    try {
        const inputs = [
            { id: "people", defaultValue: "all people", paramName: "people" },
            { id: "people_gend", defaultValue: "all", paramName: "people_gend" },
            { id: "people_roles", defaultValue: "all roles and titles", paramName: "people_roles" },
            { id: "agent_org", defaultValue: "false", paramName: "agent_org" },
            { id: "aut", defaultValue: "all senders", paramName: "aut" },
            { id: "aut_gend", defaultValue: "all", paramName: "aut_gend" },
            { id: "aut_roles", defaultValue: "all roles and titles", paramName: "aut_roles" },
            { id: "aut_org", defaultValue: "false", paramName: "aut_org" },
            { id: "aut_mark", defaultValue: "false", paramName: "aut_mark" },
            { id: "rec", defaultValue: "all recipients", paramName: "rec" },
            { id: "rec_gend", defaultValue: "all", paramName: "rec_gend" },
            { id: "rec_roles", defaultValue: "all roles and titles", paramName: "rec_roles" },
            { id: "rec_org", defaultValue: "false", paramName: "rec_org" },
            { id: "rec_mark", defaultValue: "false", paramName: "rec_mark" },
            { id: "ment", defaultValue: "all people mentioned", paramName: "ment" },
            { id: "ment_gend", defaultValue: "all", paramName: "ment_gend" },
            { id: "ment_roles", defaultValue: "all roles and titles", paramName: "ment_roles" },
            { id: "ment_org", defaultValue: "false", paramName: "ment_org" },
            { id: "dat_sin_year", defaultValue: "all years", paramName: "dat_sin_year" },
            { id: "dat_sin_month", defaultValue: "all months", paramName: "dat_sin_month" },
            { id: "dat_sin_day", defaultValue: "all dates", paramName: "dat_sin_day" },
            { id: "dat_from_year", defaultValue: "all years", paramName: "dat_from_year" },
            { id: "dat_from_month", defaultValue: "all months", paramName: "dat_from_month" },
            { id: "dat_from_day", defaultValue: "all dates", paramName: "dat_from_day" },
            { id: "dat_to_year", defaultValue: "all years", paramName: "dat_to_year" },
            { id: "dat_to_month", defaultValue: "all months", paramName: "dat_to_month" },
            { id: "dat_to_day", defaultValue: "all dates", paramName: "dat_to_day" },
            { id: "pla_ment_name", defaultValue: "all places mentioned", paramName: "pla_ment_name" },
            { id: "pla_ori_name", defaultValue: "all origins", paramName: "pla_ori_name" },
            { id: "pla_ori_mark", defaultValue: "false", paramName: "pla_ori_mark" },
            { id: "pla_des_name", defaultValue: "all destinations", paramName: "pla_des_name" },
            { id: "pla_des_mark", defaultValue: "false", paramName: "pla_des_mark" },
            { id: "locations", defaultValue: "all places", paramName: "locations" },
            { id: "let_con", defaultValue: "all content", paramName: "let_con" },
            { id: "let_type", defaultValue: "all types", paramName: "let_type" },
            { id: "let_lang", defaultValue: "all languages", paramName: "let_lang" },
            { id: "let_ima", defaultValue: "false", paramName: "let_ima" },
            { id: "let_trans", defaultValue: "false", paramName: "let_trans" },
            { id: "let_abst", defaultValue: "false", paramName: "let_abst" },
            { id: "let_pmark", defaultValue: "false", paramName: "let_pmark" },
            { id: "let_pmark_tex", defaultValue: "all postage marks", paramName: "let_pmark_tex" },
            { id: "let_end", defaultValue: "false", paramName: "let_end" },
            { id: "let_end_tex", defaultValue: "all endorsements", paramName: "let_pmark_tex" },
            { id: "let_en", defaultValue: "false", paramName: "let_en" },
            { id: "let_with_en", defaultValue: "false", paramName: "let_with_en" },
            { id: "let_with_en_tex", defaultValue: "all enclosures", paramName: "let_with_en_tex" },
            { id: "let_seal_tex", defaultValue: "all seals", paramName: "let_seal_tex" },
            { id: "let_seal", defaultValue: "false", paramName: "let_seal" },
            { id: "let_pap_typ", defaultValue: "false", paramName: "let_pap_typ" },
            { id: "let_pap_typ_tex", defaultValue: "all paper types", paramName: "let_pap_typ_tex" },
            { id: "let_pap_siz", defaultValue: "false", paramName: "let_pap_siz" },
            { id: "let_pap_siz_tex", defaultValue: "all paper sizes", paramName: "let_pap_siz_tex" },
            { id: "let_page", defaultValue: "false", paramName: "let_page" },
            { id: "let_page_min", defaultValue: "all number", paramName: "let_page_min" },
        ];

        const baseURL = `${window.location.origin}/forms/advance`;
        let sendQuery = false;
        let queryString = "";

        const baseOrigin = window.location.origin;

        inputs.forEach(input => {
            const value = document.getElementById(input.id).value;

            if (value && value !== input.defaultValue) {
                sendQuery = true;
                queryString += `${checkQueryOpt(queryString)}${input.paramName}=${value}`;
            }
        });

        if(queryString) {
            window.location.href = `${baseURL}?${queryString}`
        } else {
            window.location.href = `${baseURL}`
        }

    } catch (err) {
        console.error(`got an error: "${err}" while processing people advance search.`)
    } 
}

function checkQueryOpt(val) {
    if(val) {
        return `&`
    } 

    return ''
}

function changeCheckboxValue(checkbox) {
    checkbox.value = checkbox.checked
}

// Handling dynamic dates for selected months
function updateDays(yearElementID, monthElementID, dayElementID){
    try {
        // Displaying an error if any element ID is missing
        if(!yearElementID || !monthElementID || !dayElementID) {
            console.error(`Element ID is missing for updating days as per selected month`)
            return
        }
        
        const year = document.getElementById(yearElementID).value;
        const month = document.getElementById(monthElementID).value;
        const daySelect = document.getElementById(dayElementID);
        daySelect.innerHTML = '<option class="default" selected="selected">all dates</option>';

        if (month == "all months") {
            console.debug("Reurning default value found")
            return
        }
        
        let daysInMonth;

        switch (month) {
        case "01": case "03": case "05": case "07": case "08": case "10": case "12":
            daysInMonth = 31;
            break;
        case "04": case "06": case "09": case "11":
            daysInMonth = 30;
            break;
        case "02":
            daysInMonth = (year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)) ? 29 : 28;
            break;
        default:
            daysInMonth = 31;
            break;
        }

        for (let day = 1; day <= daysInMonth; day++) {
            const option = document.createElement("option");
            option.value = day;
            option.textContent = day;
            daySelect.appendChild(option);
        }
    } catch (err) {
        console.error(err)
    }
}
</script>
{% endblock extra_js_bottom %}